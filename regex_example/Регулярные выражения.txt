. - любой символ, кроме конца строки
\d - любая цифра
\D - любая не цифра
[0-9] - любая цифра
[A-Z] - Любая заглавная буква
[a-z] - любая маленькая буква
\s - любой пробельный символ, считая табуляции
\S - любой не пробельный символ
\s^ - количество начал строки = кол-во строк
\w - слово, любая буква или цифры
\W - не слова, разделители пробелы итд
^ - начало строки
.$ - конец строки
\b - граница слова, слева справа
\B - не граница слова
(L|l) - область видимости, потестить
| - или, или
[ab] - в строке встречается и 'а' и 'b'

* - 0 или более
+ - 1 или более
? - 0 или 1
\d+ - пример
\d{1,3} - от 1 до 3 раз
\d{0,1} - от 0 до 1 раз
\d{1,} - от 1 до "inf"
\. экранирование точки, те не воспринимает как спец символ.
import re
re.compile()
re.match()
re.search()
re.fullmatch()
re.findall()
re.split()
re.sub()
re.finditer()
import re
pattern = re.compile(r'\w+')
pattern.search('Hello, World!')
out <re.Match object; span=(0,5), match='Hello'>

||
pattern = "\w+"
text = "Hello, World!"
match = re.findall(pattern,text)
print(match)



(\b[01]\d:[0-5]\d:[0-5]\d\b) | (\b2[0-3]:[0-5]\d:[0-5]\d\b)|([01]\d:[0-5]\d)|(2[0-3]:[0-5]\d)


((\n| )[01]\d:([0-5]\d:?){1,2})|((\n| )2[0-3]:([0-5]\d:?){1,2})
r'([01]\d:([0-5]\d:?){1,2})|(2[0-3]:([0-5]\d:?){1,2})'
r'([01]\d:([0-5]\d:?){1,2})|(2[0-3]:([0-5]\d:?){1,2})'
((A-Z]|[^?!.])*!)


[А-Я][а-я]+\s[А-Я]\.[А-Я]\. P000 - 2 доп задание




#if(match!='None'):
    #    print(match.group(0))
    
    #print({match.start(0)})
    #match=re.split(patternraz,text[i])
    #print(re.split(patternraz,text[i]))
    #print(match.group())
#zb=list()
#stroka=""
#for i in range(len(text)):
#    stroka=stroka+text[i]
#zb=re.split(patternraz,stroka)
#string=""
#print(zb)
#for i in range(len(zb)):
#    string = string+zb[i]
#print(string)








1) 1 dop zad
        #helper=re.search(pattern,text[i])
        #helper=helper.group()
        #if(re.search(patternzap,helper)):
        #    print(helper)
